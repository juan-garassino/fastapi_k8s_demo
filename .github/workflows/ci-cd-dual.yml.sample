# .github/workflows/ci-cd-dual.yml
name: FastAPI Dual Registry CI/CD (Build + Push + Deploy)

on:
  push:
    branches: ["main"]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GHCR_TOKEN }}
          fetch-depth: 0

      # üê≥ Log in to GitHub Container Registry (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # üîê Authenticate with Google Cloud (OIDC, no keys)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # üß∞ Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # üîß Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev --quiet

      # üèóÔ∏è Build and push Docker image to GHCR and GAR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/fastapi-demo:latest
            ghcr.io/${{ github.repository_owner }}/fastapi-demo:${{ github.sha }}
            europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-repo/fastapi-demo:${{ github.sha }}
            europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-repo/fastapi-demo:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      # üöÄ Deploy to Cloud Run (using GAR image)
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy fastapi-demo \
            --image=europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fastapi-repo/fastapi-demo:${{ github.sha }} \
            --region=europe-west1 \
            --platform=managed \
            --allow-unauthenticated \
            --update-env-vars=COMMIT_SHA=${{ github.sha }} \
            --timeout=20s

      # üå°Ô∏è Smoke test deployment
      - name: Smoke test new deployment
        run: |
          SERVICE_URL=$(gcloud run services describe fastapi-demo \
            --region=europe-west1 --format='value(status.url)')
          echo "Testing service at $SERVICE_URL"
          sleep 10
          curl -f "$SERVICE_URL/healthz" || (echo "Smoke test failed" && exit 1)

      # üîô Rollback on failure
      - name: Rollback on failure
        if: failure()
        run: |
          PREV_REV=$(gcloud run revisions list \
            --service fastapi-demo \
            --region=europe-west1 \
            --sort-by="~createTime" \
            --format="value(metadata.name)" | sed -n 2p)
          echo "Rolling back to $PREV_REV"
          gcloud run services update-traffic fastapi-demo \
            --region=europe-west1 \
            --to-revisions $PREV_REV=100
